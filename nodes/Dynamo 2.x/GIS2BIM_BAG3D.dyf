{
  "Uuid": "ee26796f-272f-4a62-809b-f308fef53fb0",
  "IsCustomNode": true,
  "Category": "GIS2BIM.DutchGEO",
  "Description": "Perform a WFS(Web Feature Service) webrequest based on a boundingbox of RD-coordinates(28992). Retrieve an xml-file. Read the metadata and create 3D-solids. Maximum of 1000 buildings per request.",
  "Name": "GIS2BIM_BAG3D",
  "ElementResolver": {
    "ResolutionMap": {
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "Solid.ByUnion": {
        "Key": "Autodesk.DesignScript.Geometry.Solid",
        "Value": "ProtoGeometry.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "PolyCurve": {
        "Key": "Autodesk.DesignScript.Geometry.PolyCurve",
        "Value": "ProtoGeometry.dll"
      },
      "Surface": {
        "Key": "Autodesk.DesignScript.Geometry.Surface",
        "Value": "ProtoGeometry.dll"
      },
      "DSCore.Object": {
        "Key": "DSCore.Object",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Solid": {
        "Key": "Autodesk.DesignScript.Geometry.Solid",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "574cba4e4ff648e68f7eb7348b803bc3",
      "Name": "String",
      "Type": "string",
      "Value": ".//{http://www.opengis.net/gml}posList",
      "Description": "Creates a string."
    },
    {
      "Id": "6421d272c2f642fb925b5f7c3735ec69",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}identificatie",
      "Description": "Creates a string."
    },
    {
      "Id": "50aba03fd1ce4fa1a7bf8e817fc0e1bd",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}bouwjaar",
      "Description": "Creates a string."
    },
    {
      "Id": "374785bfa64c48138c39992d6a348751",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}ground-0.00",
      "Description": "Creates a string."
    },
    {
      "Id": "5885a5b3c90149f0a9745ada52313311",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}ground-0.50",
      "Description": "Creates a string."
    },
    {
      "Id": "9815485756454cf694f29fe3ff003f06",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}roof-0.00",
      "Description": "Creates a string."
    },
    {
      "Id": "b63fb9eded9f47859fb0a79559722cfa",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}roof-0.50",
      "Description": "Creates a string."
    },
    {
      "Id": "fb27a51e74d5467ea3564cfdae91c521",
      "Name": "String",
      "Type": "string",
      "Value": ".//{3dbag}roof-0.99",
      "Description": "Creates a string."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7c7b712b2d3b4ccea63c822b12c2706f",
      "Inputs": [
        {
          "Id": "306ba3e257574127a5036e9d72fda34a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02950cfc09ca4949b38e0432db35f3f9",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7477ee772c04c208431e2b7ac76bb77",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1566d7833847493981d923fe864424e0",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4dbee47e9f047b8a458bbaa6c5ab341",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ccfcef564b3425c8ebd758e42ca2c9b",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c343d95cf68a4393b25436661384a565",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1b46e43cf2b4ea89cff673534a01c3f",
          "Name": "item7",
          "Description": "Item Index #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "377b849752b8468b90ad25d269244fbf",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{http://www.opengis.net/gml}posList",
      "Id": "574cba4e4ff648e68f7eb7348b803bc3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1dca4ca09042490c9daeec97782b7443",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}identificatie",
      "Id": "6421d272c2f642fb925b5f7c3735ec69",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6acbbec223fd48be854a530cc7b4f6cd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}bouwjaar",
      "Id": "50aba03fd1ce4fa1a7bf8e817fc0e1bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c820f005cd66477ba123d1d6ad3af320",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}ground-0.00",
      "Id": "374785bfa64c48138c39992d6a348751",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef4a25de52ed4c48921e1cbd70c9889f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}ground-0.50",
      "Id": "5885a5b3c90149f0a9745ada52313311",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bdd600563fa49978c560f221cad2da2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}roof-0.00",
      "Id": "9815485756454cf694f29fe3ff003f06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "944f216e8cc346809f85fbeaf0ee124b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}roof-0.50",
      "Id": "b63fb9eded9f47859fb0a79559722cfa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcef4da711754e2f8c6e965de1769582",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": ".//{3dbag}roof-0.99",
      "Id": "fb27a51e74d5467ea3564cfdae91c521",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5acf7fd116c425ba1e6a5bf56f117e9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.WebRequest, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8467148c46be4929b9e03407da8f55c1",
      "Inputs": [
        {
          "Id": "0cacd701818e44378b53cf041127385c",
          "Name": "url",
          "Description": "The url for the web request.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6b6d14d48114826b4f9f8d0f1938183",
          "Name": "result",
          "Description": "The result of the web request.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Make a web request given a url."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "BAG3DTUDelft_OGCWFS",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "269d4b7923784174b8651b4d3768f035",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f82ff8cb0b84ac6922849dc37cd4275",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "BAG 3D Metadata Xquery",
      "Id": "5c054132a297421ab40e5ab6b788f2ca",
      "Inputs": [
        {
          "Id": "887044859b9344ba93854cfd77ff7697",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "BAG 3DSolidUnion",
      "Id": "bd0c02a8581b484d83a1e38ccc000048",
      "Inputs": [
        {
          "Id": "70c81dceaf1142eebb64459e1a961b26",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "RdX",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "d74351aa95c542fbb0aae1766e951065",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca480151885646168126e8ce59bb5c6a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "RdY",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "372cce04323e48cc84475c5c9bf64df7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82dc130fde774a209666c872cb887343",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\n\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nimport xml.etree.ElementTree as ET\r\n\r\nimport itertools\t# smart list functons like izip_longest (transpose)\r\nimport operator\t\t# for smart sort (itemgetter)\r\n\r\n# =====================================================\r\n\r\nxml \t\t= IN[0]\r\nxpathlist \t= IN[1]\r\n\r\nroot = ET.fromstring(xml)\r\n\r\nxpathsfound = []\r\n\r\nfor i in xpathlist:\r\n\txpathsfound.append(root.findall(i))\r\n\t\r\nlstJSON = []\r\nfor i in range(len(xpathsfound)):\r\n\txtext = []\r\n\tfor j in range(len(xpathsfound[0])):\r\n\t\ttry: xtext.append(xpathsfound[i][j].text)\r\n\t\texcept: xtext.append('0')#\"_none\")\r\n\tlstJSON.append(xtext)\r\n\r\n# =====================================================\r\n\r\nlstGround = []\r\nfor item in lstJSON[3]:\t# get the lowest value for the building solids\r\n\tlstGround.append(float(item))\t# remember the lowest value\r\nintBottom = min(lstGround)*1000\r\nlstGround.Clear()\r\n\r\n# =====================================================\r\n\r\nrdX \t= IN[2]\r\nrdY\t\t= IN[3]\r\n\r\nlstSurface = []\r\n\r\ndef defSurface(item):\r\n\tlstPoints = item.split(' ')\r\n\tlstXYZ = []\r\n\tlstPointsX = lstPoints[0::3]\r\n\tlstPointsY = lstPoints[1::3]\r\n\tlstPointsZ = lstPoints[2::3]\r\n\tfor x,y in zip(lstPointsX, lstPointsY):\r\n\t\tptX = round(1000*(float(x)-rdX))\r\n\t\tptY = round(1000*(float(y)-rdY))\r\n\t\tlstXYZ.append(Point.ByCoordinates(ptX,ptY,intBottom))\r\n\treturn Surface.ByPatch(PolyCurve.ByPoints(lstXYZ, False))\r\n\r\nfor item in lstJSON[2]:\r\n\tlstSurface.append(defSurface(item))\r\n\r\n# =====================================================\r\n\r\n#lstSurface = IN[0]\r\n#lstJSON \t= IN[1]\r\n\r\nlstJSON[2]\t= lstSurface\t# replace sublist with contour point for surface list\r\n\r\nintJSONId \t\t\t= 0\r\nintJSONbouwjaar \t= 1\r\nintJSONcontour \t\t= 2\r\nintJSONground0_0 \t= 3\r\nintJSONground0_5 \t= 4\r\nintJSONroof0_0 \t\t= 5\r\nintJSONroof0_5 \t\t= 6\r\nintJSONroof0_99 \t= 7\r\nintJSONArea\t\t \t= 8\t# to be added\r\n\r\n\r\nlstHeightIndices = [\r\nintJSONground0_0,\r\nintJSONground0_5,\r\nintJSONroof0_0,\r\nintJSONroof0_5,\r\nintJSONroof0_99\r\n]\t# list with indices to be checked\r\n\r\n\r\n#lstJSONground \t\t= lstHeightIndices[:1]\r\n#lstJSONroof\t\t= lstHeightIndices[1:]\r\n\r\nlstJSON = map(list, itertools.izip_longest(*lstJSON)) # // transpose\r\n\r\nfor item in lstJSON:\t# append area needed for the check on heights\r\n\titem.append(item[2].Area/(1000*1000))\r\n\r\n# sort the list based on multiple criteria\r\nlstJSON = sorted(lstJSON, key=operator.itemgetter(intJSONArea,intJSONbouwjaar))\r\n\r\n# [sublist maximum area, minimum height, maximum height, (set of to be checked indices),(set of uniform values), the height index]\r\nlstOptions \t\t= [\r\n[20,2,6,(lstHeightIndices[3:5]),(lstHeightIndices[1:]),3],\r\n[50,3,16,(lstHeightIndices[3:5]),(lstHeightIndices[1:]),4],\r\n[75,3,16,(lstHeightIndices[3:5]),(lstHeightIndices[1:]),4],\r\n[100,3,20,(lstHeightIndices[3:5]),(lstHeightIndices[1:]),4],\r\n[150,3,30,(lstHeightIndices[3:5]),(lstHeightIndices[1:]),4],\r\n[1000000,3,999,(lstHeightIndices[3:5]),(lstHeightIndices[:1]),4],\r\n]\r\n\r\n\r\n# > prepare the divided list to be filled\r\nlstGrouped = []\r\nfor item in lstOptions:\r\n\tlstGrouped.append([])\r\n\tc = 0\t# reset counter\r\n\tfor index in lstHeightIndices:\t# append sublist based on the JSON\r\n\t\tlstGrouped[-1].append([])\r\n\t\tc = c + 1\t# counter\r\n\r\n\r\n# > divide complete list of buildings by area group\r\nfor subBuilding in lstJSON:\r\n\tcBld = 0\t# reset counter\r\n\tfor iOpt in lstOptions:\t#\tarea divider list\r\n\t\tif subBuilding[intJSONArea] < iOpt[0]: # check for the right group\r\n\t\t\tcBldOpt = 0\t# reset second counter\r\n\t\t\tfor index in lstHeightIndices:\t# every relevant index\r\n\t\t\t\tif index in lstOptions[cBld][3]:\t# is there a check for the height\r\n\t\t\t\t\tfltTMP = float(subBuilding[index]) - float(subBuilding[intJSONground0_0])\r\n\t\t\t\t\t# the height of the object\r\n\t\t\t\t\tif fltTMP > lstOptions[cBld][1] and fltTMP < lstOptions[cBld][2]:\t# check height\r\n\t\t\t\t\t\tlstGrouped[cBld][cBldOpt].append(float(subBuilding[index]))\r\n\t\t\t\t\telif fltTMP > lstOptions[cBld][1]:\t# then it has to be the maximum height\r\n\t\t\t\t\t\tfltTMP = lstOptions[cBld][2] - float(subBuilding[intJSONground0_0])\r\n\t\t\t\t\t\tlstGrouped[cBld][cBldOpt].append(float(subBuilding[index]))\r\n\t\t\t\t\telif fltTMP < lstOptions[cBld][2]:\t# then it has to be the minimum height\r\n\t\t\t\t\t\tfltTMP = lstOptions[cBld][1] - float(subBuilding[intJSONground0_0])\r\n\t\t\t\t\t\tlstGrouped[cBld][cBldOpt].append(float(subBuilding[index]))\r\n\t\t\t\t\t#else no value\r\n\t\t\t\telse:\r\n\t\t\t\t\tlstGrouped[cBld][cBldOpt].append(float(subBuilding[index]))\r\n\t\t\t\tcBldOpt = cBldOpt + 1\t# counter\r\n\t\t\tbreak\r\n\t\tcBld  = cBld + 1\t# counter\r\n\r\n\r\n# > create a new list with proven values for heights etc\r\nlstProvenHeights = []\r\ncAreaGroup = 0\t# reset counter\r\nfor iGroup in lstGrouped:\t\r\n\tlstProvenHeights.append([lstOptions[cAreaGroup][0]])\r\n\tcOpt = 0\t# reset counter\r\n\tfor iHeights in iGroup:\r\n\t\tif lstHeightIndices[cOpt] in lstOptions[cAreaGroup][4]:\t# is there a check for the average height\r\n\t\t\t# append the average value\r\n\t\t\t#lstProvenHeights[-1].append(itertools.repeat(round(sum(iHeights)/len(iHeights),1), len(iGroup[0])))\r\n\t\t\tlstTMPph = []\r\n\t\t\tfor i in range(len(iGroup[0])):\r\n\t\t\t\tlstTMPph.append(round(sum(iHeights)/len(iHeights),1))\r\n\t\t\tlstProvenHeights[-1].append(lstTMPph)\r\n\t\telse:\r\n\t\t\tlstProvenHeights[-1].append(iHeights)\r\n\t\tcOpt = cOpt + 1\t# counter\r\n\tcAreaGroup = cAreaGroup + 1\t# counter\r\n#lstGrouped.Clear()\r\n\r\n\r\n# > create solids\r\nlstSolids = []\r\ncBuilding = 0 # reset counter (surfaces)\r\ncGroup = 0\t# reset counter (groups)\r\nfor iOpt in lstOptions:\r\n#\tif cGroup != 0: \r\n#\t\tcGroup = cGroup + 1\r\n#\t\tcontinue\r\n\tfor iHeight in lstProvenHeights[cGroup][iOpt[5]+1]:\t# get the right index for the height\r\n\t\tobSurface = lstJSON[cBuilding][2]\t#lstSurface[cSurface]\t# get the surface\r\n\t\tcBuilding = cBuilding + 1\t# counter\r\n\t\tobSolid = obSurface.Thicken(1000*(iHeight) - intBottom, False)\t# give it height\r\n\t\tlstSolids.append(obSolid)\r\n\tcGroup = cGroup + 1\r\nobSolidUnion = lstSolids[0].UnionAll(lstSolids)\r\n\r\ntry:\r\n\tOUT = obSolidUnion, lstProvenHeights\r\nexcept:\r\n\tOUT = lstProvenHeights#, lstOptions, lstGrouped",
      "VariableInputPorts": true,
      "Id": "d468a7978395484dbdc513f323237bf5",
      "Inputs": [
        {
          "Id": "6bdf6744b90648acb5135bd31876115c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2424b706deac410a8bab111dfcfe064d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff7d606cecd4b1eb42668f9c4c510f0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42c8245d60bc4f19b25a473ccb524c5d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70bb610a4d3c4cc7a463a1b9941e4a19",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "9caa41268d3a4c88875e346ef75889ff",
      "Inputs": [
        {
          "Id": "0ced065273d946539854d8dd1f5c97ba",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b90cb7b148c4b60bf47b8428e9647f5",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "377b849752b8468b90ad25d269244fbf",
      "End": "887044859b9344ba93854cfd77ff7697",
      "Id": "a4569aa77a794d4581dd4858f65ae80f"
    },
    {
      "Start": "377b849752b8468b90ad25d269244fbf",
      "End": "2424b706deac410a8bab111dfcfe064d",
      "Id": "4549526a48df4c72bc28f8499294a74c"
    },
    {
      "Start": "1dca4ca09042490c9daeec97782b7443",
      "End": "d7477ee772c04c208431e2b7ac76bb77",
      "Id": "321156e6d6d142c08adde9e6d0f98596"
    },
    {
      "Start": "6acbbec223fd48be854a530cc7b4f6cd",
      "End": "306ba3e257574127a5036e9d72fda34a",
      "Id": "9e12fe6128ac4f8ea8a57ab99fd0c1f4"
    },
    {
      "Start": "c820f005cd66477ba123d1d6ad3af320",
      "End": "02950cfc09ca4949b38e0432db35f3f9",
      "Id": "fdee0ea7a49149a19cc3aa90ba53479d"
    },
    {
      "Start": "ef4a25de52ed4c48921e1cbd70c9889f",
      "End": "1566d7833847493981d923fe864424e0",
      "Id": "10170aeec0254f26990b54cf35209193"
    },
    {
      "Start": "7bdd600563fa49978c560f221cad2da2",
      "End": "a4dbee47e9f047b8a458bbaa6c5ab341",
      "Id": "a14a74d0451f43268bb5055fed13222d"
    },
    {
      "Start": "944f216e8cc346809f85fbeaf0ee124b",
      "End": "9ccfcef564b3425c8ebd758e42ca2c9b",
      "Id": "afe47b4c883b40a7a8b62794a19aa9ee"
    },
    {
      "Start": "fcef4da711754e2f8c6e965de1769582",
      "End": "c343d95cf68a4393b25436661384a565",
      "Id": "7e561d2b4f6a4622b717c51c38e223a1"
    },
    {
      "Start": "c5acf7fd116c425ba1e6a5bf56f117e9",
      "End": "c1b46e43cf2b4ea89cff673534a01c3f",
      "Id": "6f1cf90ad8894af6917ed74bb528560e"
    },
    {
      "Start": "c6b6d14d48114826b4f9f8d0f1938183",
      "End": "6bdf6744b90648acb5135bd31876115c",
      "Id": "1e992408c27c4cff8eb5310fb35cee01"
    },
    {
      "Start": "0f82ff8cb0b84ac6922849dc37cd4275",
      "End": "0cacd701818e44378b53cf041127385c",
      "Id": "041743ed90d8429e98265d6767752e62"
    },
    {
      "Start": "ca480151885646168126e8ce59bb5c6a",
      "End": "6ff7d606cecd4b1eb42668f9c4c510f0",
      "Id": "20ddb95a564c4bed82d14c27f20628a5"
    },
    {
      "Start": "82dc130fde774a209666c872cb887343",
      "End": "42c8245d60bc4f19b25a473ccb524c5d",
      "Id": "eed22d46409648eea5c4f4403b3b5a5c"
    },
    {
      "Start": "70bb610a4d3c4cc7a463a1b9941e4a19",
      "End": "0ced065273d946539854d8dd1f5c97ba",
      "Id": "ca99f0a5473c4d57a1a17074f3d4fe5c"
    },
    {
      "Start": "6b90cb7b148c4b60bf47b8428e9647f5",
      "End": "70c81dceaf1142eebb64459e1a961b26",
      "Id": "56d2067d82f54c529daa23d83d1e7a5d"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -206943.14381634293,
      "EyeY": 131523.92483783446,
      "EyeZ": 626127.88699644187,
      "LookX": 206943.14381634293,
      "LookY": -131523.92483783446,
      "LookZ": -626127.88699644187,
      "UpX": -0.0060244388106024446,
      "UpY": 0.999815729593212,
      "UpZ": 0.01822764079590106
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "List.Create",
        "Id": "7c7b712b2d3b4ccea63c822b12c2706f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1082.6203538579446,
        "Y": 919.71704772655676
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "574cba4e4ff648e68f7eb7348b803bc3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 992.629219223542
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "6421d272c2f642fb925b5f7c3735ec69",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 693.0,
        "Y": 848.5900024783
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "50aba03fd1ce4fa1a7bf8e817fc0e1bd",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 922.537828629561
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "374785bfa64c48138c39992d6a348751",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 1062.72060981752
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "5885a5b3c90149f0a9745ada52313311",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 1132.81200041151
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "9815485756454cf694f29fe3ff003f06",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 1202.90339100549
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b63fb9eded9f47859fb0a79559722cfa",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 1272.99478159947
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "fb27a51e74d5467ea3564cfdae91c521",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 698.78465333592,
        "Y": 1343.08617219345
      },
      {
        "ShowGeometry": true,
        "Name": "Web Request",
        "Id": "8467148c46be4929b9e03407da8f55c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 694.710701337461,
        "Y": 602.16601422986469
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "269d4b7923784174b8651b4d3768f035",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 191.612092063162,
        "Y": 604.143111615429
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "5c054132a297421ab40e5ab6b788f2ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1677.4542562944719,
        "Y": 914.79259881360281
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "bd0c02a8581b484d83a1e38ccc000048",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1666.4690592007557,
        "Y": 593.93167584245475
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "d74351aa95c542fbb0aae1766e951065",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 192.25458385462349,
        "Y": 714.39818618451363
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "372cce04323e48cc84475c5c9bf64df7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 189.185883094879,
        "Y": 799.119770658837
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "d468a7978395484dbdc513f323237bf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1312.10383716582,
        "Y": 596.74246021979673
      },
      {
        "ShowGeometry": false,
        "Name": "List.FirstItem",
        "Id": "9caa41268d3a4c88875e346ef75889ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1468.070857216155,
        "Y": 593.1244589101193
      }
    ],
    "Annotations": [
      {
        "Id": "b0e8b718bea94e5aa3008ede151560f5",
        "Title": "WEBREQUEST & QUERY GML",
        "Nodes": [
          "7c7b712b2d3b4ccea63c822b12c2706f",
          "6421d272c2f642fb925b5f7c3735ec69",
          "50aba03fd1ce4fa1a7bf8e817fc0e1bd",
          "574cba4e4ff648e68f7eb7348b803bc3",
          "374785bfa64c48138c39992d6a348751",
          "5885a5b3c90149f0a9745ada52313311",
          "9815485756454cf694f29fe3ff003f06",
          "b63fb9eded9f47859fb0a79559722cfa",
          "fb27a51e74d5467ea3564cfdae91c521"
        ],
        "Left": 683.0,
        "Top": 802.5900024783,
        "Width": 529.62035385794456,
        "Height": 608.49616971515,
        "FontSize": 30.0,
        "InitialTop": 848.5900024783,
        "InitialHeight": 639.49616971515,
        "TextblockHeight": 36.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 106.41172656750393,
    "Y": -3.8855427098620794,
    "Zoom": 0.52054173202440246
  }
}
